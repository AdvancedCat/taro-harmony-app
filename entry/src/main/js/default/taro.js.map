{"version":3,"file":"taro.js","sources":["webpack:///../src/props.ts","webpack:///../src/reconciler.ts","webpack:///../src/render.ts","webpack:///../src/index.ts"],"sourcesContent":["import { TaroElement, Style, FormElement } from '@tarojs/runtime'\nimport { isFunction, isString, isObject, isNumber, internalComponents, capitalize, toCamelCase } from '@tarojs/shared'\n\nexport type Props = Record<string, unknown>\n\nfunction isEventName (s: string) {\n  return s[0] === 'o' && s[1] === 'n'\n}\n\nconst IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord/i\n\nexport function updateProps (dom: TaroElement, oldProps: Props, newProps: Props) {\n  let i: string\n\n  for (i in oldProps) {\n    if (!(i in newProps)) {\n      setProperty(dom, i, null, oldProps[i])\n    }\n  }\n  const isFormElement = dom instanceof FormElement\n  for (i in newProps) {\n    if (oldProps[i] !== newProps[i] || (isFormElement && i === 'value')) {\n      setProperty(dom, i, newProps[i], oldProps[i])\n    }\n  }\n}\n\n// function eventProxy (e: CommonEvent) {\n//   const el = document.getElementById(e.currentTarget.id)\n//   const handlers = el!.__handlers[e.type]\n//   handlers[0](e)\n// }\n\nfunction setEvent (dom: TaroElement, name: string, value: unknown, oldValue?: unknown) {\n  const isCapture = name.endsWith('Capture')\n  let eventName = name.toLowerCase().slice(2)\n  if (isCapture) {\n    eventName = eventName.slice(0, -7)\n  }\n\n  const compName = capitalize(toCamelCase(dom.tagName.toLowerCase()))\n\n  if (eventName === 'click' && compName in internalComponents) {\n    eventName = 'tap'\n  }\n\n  if (isFunction(value)) {\n    if (!oldValue) {\n      dom.addEventListener(eventName, value, isCapture)\n    }\n    if (eventName === 'regionchange') {\n      dom.__handlers.begin[0] = value\n      dom.__handlers.end[0] = value\n    } else {\n      dom.__handlers[eventName][0] = value\n    }\n  } else {\n    dom.removeEventListener(eventName, oldValue as any)\n  }\n}\n\nfunction setStyle (style: Style, key: string, value: string | number) {\n  if (key[0] === '-') {\n    style.setProperty(key, value.toString())\n  }\n\n  style[key] =\n    isNumber(value) && IS_NON_DIMENSIONAL.test(key) === false\n      ? value + 'px'\n      : value == null\n        ? ''\n        : value\n}\n\ntype StyleValue = Record<string, string | number>\ninterface DangerouslySetInnerHTML {\n  __html?: string\n}\n\nfunction setProperty (dom: TaroElement, name: string, value: unknown, oldValue?: unknown) {\n  name = name === 'className' ? 'class' : name\n\n  if (\n    name === 'key' ||\n    name === 'children' ||\n    name === 'ref'\n  ) {\n    // skip\n  } else if (name === 'style') {\n    const style = dom.style\n    if (isString(value)) {\n      style.cssText = value\n    } else {\n      if (isString(oldValue)) {\n        style.cssText = ''\n        oldValue = null\n      }\n\n      if (isObject<StyleValue>(oldValue)) {\n        for (const i in oldValue) {\n          if (!(value && i in (value as StyleValue))) {\n            setStyle(style, i, '')\n          }\n        }\n      }\n\n      if (isObject<StyleValue>(value)) {\n        for (const i in value) {\n          if (!oldValue || value[i] !== (oldValue as StyleValue)[i]) {\n            setStyle(style, i, value[i])\n          }\n        }\n      }\n    }\n  } else if (isEventName(name)) {\n    setEvent(dom, name, value, oldValue)\n  } else if (name === 'dangerouslySetInnerHTML') {\n    const newHtml = (value as DangerouslySetInnerHTML)?.__html ?? ''\n    const oldHtml = (oldValue as DangerouslySetInnerHTML)?.__html ?? ''\n    if (newHtml || oldHtml) {\n      if (oldHtml !== newHtml) {\n        dom.innerHTML = newHtml\n      }\n    }\n  } else if (!isFunction(value)) {\n    if (value == null) {\n      dom.removeAttribute(name)\n    } else {\n      dom.setAttribute(name, value as string)\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/indent */\nimport Reconciler, { HostConfig } from 'react-reconciler'\nimport * as scheduler from 'scheduler'\nimport { TaroElement, TaroText, document } from '@tarojs/runtime'\nimport { noop, EMPTY_ARR } from '@tarojs/shared'\nimport { Props, updateProps } from './props'\n\nconst {\n  unstable_now: now\n} = scheduler\n\nfunction returnFalse () {\n  return false\n}\n\nconst hostConfig: HostConfig<\n  string, // Type\n  Props, // Props\n  TaroElement, // Container\n  TaroElement, // Instance\n  TaroText, // TextInstance\n  TaroElement, // SuspenseInstance\n  TaroElement, // HydratableInstance\n  TaroElement, // PublicInstance\n  Record<string, any>, // HostContext\n  string[], // UpdatePayload\n  unknown, // ChildSet\n  unknown, // TimeoutHandle\n  unknown // NoTimeout\n> & {\n  hideInstance (instance: TaroElement): void\n  unhideInstance (instance: TaroElement, props): void\n} = {\n  createInstance (type) {\n    return document.createElement(type)\n  },\n\n  createTextInstance (text) {\n    return document.createTextNode(text)\n  },\n\n  getPublicInstance (inst: TaroElement) {\n    return inst\n  },\n\n  getRootHostContext () {\n    return {}\n  },\n\n  getChildHostContext () {\n    return {}\n  },\n\n  appendChild (parent, child) {\n    parent.appendChild(child)\n  },\n\n  appendInitialChild (parent, child) {\n    parent.appendChild(child)\n  },\n\n  appendChildToContainer (parent, child) {\n    parent.appendChild(child)\n  },\n\n  removeChild (parent, child) {\n    parent.removeChild(child)\n  },\n\n  removeChildFromContainer (parent, child) {\n    parent.removeChild(child)\n  },\n\n  insertBefore (parent, child, refChild) {\n    parent.insertBefore(child, refChild)\n  },\n\n  insertInContainerBefore (parent, child, refChild) {\n    parent.insertBefore(child, refChild)\n  },\n\n  commitTextUpdate (textInst, _, newText) {\n    textInst.nodeValue = newText\n  },\n\n  finalizeInitialChildren (dom, _, props) {\n    updateProps(dom, {}, props)\n    return false\n  },\n\n  prepareUpdate () {\n    return EMPTY_ARR\n  },\n\n  commitUpdate (dom, _payload, _type, oldProps, newProps) {\n    updateProps(dom, oldProps, newProps)\n  },\n\n  hideInstance (instance) {\n    const style = instance.style\n    style.setProperty('display', 'none')\n  },\n\n  unhideInstance (instance, props) {\n    const styleProp = props.style\n    let display = styleProp?.hasOwnProperty('display') ? styleProp.display : null\n    display = display == null || typeof display === 'boolean' || display === '' ? '' : ('' + display).trim()\n    // eslint-disable-next-line dot-notation\n    instance.style['display'] = display\n  },\n\n  clearContainer (element) {\n    if (element.childNodes.length > 0) {\n      element.textContent = ''\n    }\n  },\n\n  queueMicrotask: typeof Promise !== 'undefined'\n  ? callback =>\n      Promise.resolve(null)\n        .then(callback)\n        .catch(function (error) {\n          setTimeout(() => {\n            throw error\n          })\n        })\n  : setTimeout,\n\n  shouldSetTextContent: returnFalse,\n  prepareForCommit (..._: any[]) { return null },\n  resetAfterCommit: noop,\n  commitMount: noop,\n  now,\n  cancelTimeout: clearTimeout,\n  scheduleTimeout: setTimeout,\n  preparePortalMount: noop,\n  noTimeout: -1,\n  supportsMutation: true,\n  supportsPersistence: false,\n  isPrimaryRenderer: true,\n  supportsHydration: false\n}\n\nconst TaroReconciler = Reconciler(hostConfig)\n\nif (process.env.NODE_ENV !== 'production') {\n  const foundDevTools = TaroReconciler.injectIntoDevTools({\n    bundleType: 1,\n    version: '17.0.2',\n    rendererPackageName: 'taro-react'\n  })\n  if (!foundDevTools) {\n    // eslint-disable-next-line no-console\n    console.info('%cDownload the React DevTools ' + 'for a better development experience: ' + 'https://reactjs.org/link/react-devtools', 'font-weight:bold')\n  }\n}\n\nexport {\n  TaroReconciler\n}\n","import { TaroElement } from '@tarojs/runtime'\nimport { ReactNode } from 'react'\nimport { TaroReconciler } from './reconciler'\nimport { OpaqueRoot } from 'react-reconciler'\n\nexport const ContainerMap: WeakMap<TaroElement, Root> = new WeakMap()\n\ntype Renderer = typeof TaroReconciler\n\nexport type Callback = () => void | null | undefined\n\nclass Root {\n  private renderer: Renderer\n  private internalRoot: OpaqueRoot\n\n  public constructor (renderer: Renderer, domContainer: TaroElement) {\n    this.renderer = renderer\n    this.internalRoot = renderer.createContainer(domContainer, 0/** LegacyRoot: react-reconciler/src/ReactRootTags.js */, false, null)\n  }\n\n  public render (children: ReactNode, cb: Callback) {\n    this.renderer.updateContainer(children, this.internalRoot, null, cb)\n\n    return this.renderer.getPublicRootInstance(this.internalRoot)\n  }\n\n  public unmount (cb: Callback) {\n    this.renderer.updateContainer(null, this.internalRoot, null, cb)\n  }\n}\n\nexport function render (element: ReactNode, domContainer: TaroElement, cb: Callback) {\n  const oldRoot = ContainerMap.get(domContainer)\n  if (oldRoot != null) {\n    return oldRoot.render(element, cb)\n  }\n\n  const root = new Root(TaroReconciler, domContainer)\n  ContainerMap.set(domContainer, root)\n  return root.render(element, cb)\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { render, ContainerMap } from './render'\nimport { TaroReconciler } from './reconciler'\nimport { TaroElement } from '@tarojs/runtime'\nimport { ReactNode } from 'react'\nimport { ensure } from '@tarojs/shared'\n\nconst unstable_batchedUpdates = TaroReconciler.batchedUpdates\n\nfunction unmountComponentAtNode (dom: TaroElement) {\n  ensure(dom && [1, 8, 9, 11].includes(dom.nodeType), 'unmountComponentAtNode(...): Target container is not a DOM element.')\n\n  const root = ContainerMap.get(dom)\n\n  if (!root) return false\n\n  unstable_batchedUpdates(() => {\n    root.unmount(() => {\n      ContainerMap.delete(dom)\n    })\n  }, null)\n\n  return true\n}\n\nfunction findDOMNode (comp?: TaroElement | ReactNode) {\n  if (comp == null) {\n    return null\n  }\n\n  const nodeType = (comp as TaroElement).nodeType\n  if (nodeType === 1 || nodeType === 3) {\n    return comp\n  }\n\n  return TaroReconciler.findHostInstance(comp as Record<string, any>)\n}\n\nconst portalType = typeof Symbol === 'function' && Symbol.for\n  ? Symbol.for('react.portal')\n  : 0xeaca\n\nfunction createPortal (\n  children: ReactNode,\n  containerInfo: TaroElement,\n  key?: string\n) {\n  return {\n    $$typeof: portalType,\n    key: key == null ? null : String(key),\n    children,\n    containerInfo,\n    implementation: null\n  }\n}\n\nexport {\n  render,\n  unstable_batchedUpdates,\n  unmountComponentAtNode,\n  findDOMNode,\n  createPortal\n}\n\nexport default {\n  render,\n  unstable_batchedUpdates,\n  unmountComponentAtNode,\n  findDOMNode,\n  createPortal\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAMA;;;AACA;AAEA;AAOA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnIA;AACA;AACA;AAKA;AACA;AAGA;AACA;AACA;AACA;AACA;AAkBA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AAPA;AAUA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5GA;AA+GA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAIA;;AAEA;AACA;AACA;AACA;ACvJA;AACA;AAKA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AACA;AACA;AAEA;AACA;;;AAEA;AACA;AACA;;;;;;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxCA;AACA;AACA;AADA;AACA;AAOA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AALA;;;;;;A","sourceRoot":""}